{
    "swagger": "2.0",
    "host": "localhost:8000",
    "basePath": "/api/",
    "info": {
        "version": "1.0.0",
        "title": "Simple API",
        "description": "A simple API to learn how to write OpenAPI Specification"
    },
    "schemes": [
        "https",
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "oauth": {
            "tokenUrl": "http://auth.ibtspl.com/oauth2/",
            "flow": "password",
            "scopes": {
                "read": "read users",
                "write": "create users",
                "update": "update users",
                "delete": "delete users",
                "superuser": "super user permission"
            },
            "type": "oauth2"
        }
    },
    "definitions": {
        "UserAuthentication": {
            "type": "object",
            "properties": {
                "user_name": {
                    "type": "string"
                },
                "e-mail": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "required": [
                "user_name",
                "e-mail",
                "password"
            ]
        },
        "UserAuthenticationResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/UserAuthentication"
                },
                {
                    "type": "object",
                    "properties": {
                        "createdOn": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userId": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "createdOn",
                        "userId"
                    ]
                }
            ]
        }
    },
    "parameters": {
        "CreateNewPersonParameter": {
            "name": "person",
            "in": "body",
            "description": "The person to create.",
            "required": true,
            "schema": {
                "$ref": "#/definitions/UserAuthentication"
            }
        }
    },
    "responses": {
        "CreateNewPersonResponse": {
            "description": "Success Response",
            "schema": {
                "$ref": "#/definitions/UserAuthenticationResponse"
            }
        },
        "Failed_response": {
            "description": "Failure Response",
            "schema": {
                "type": "object",
                "properties": {
                    "error_message": {
                        "type": "string",
                        "description": "An error occurred"
                    },
                    "error_enums": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ERROR_IN_USER_NAME",
                                "ERROR_IN_EMAIL",
                                "ERROR_IN_PASSWORD"
                            ]
                        },
                        "description": "List of possible error types"
                    }
                },
                "required": ["error_message", "error_enums"]
            }
        }
    },
    "paths": {
        "/create/user/": {
            "post": {
                "operationId": "create_user",
                "summary": "Create New User",
                "description": "Creates a new user and returns the user object. This API is not idempotent.",
                "security": [
                    {
                        "oauth": [
                            "superuser"
                        ]
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/CreateNewPersonParameter"
                    }
                ],
                "responses": {
                    "201": {
                        "$ref": "#/responses/CreateNewPersonResponse"
                    },
                    "400": {
                        "$ref": "#/responses/Failed_response"
                    }
                }
            }
        }
    }
}
